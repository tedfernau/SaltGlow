

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jan 23 21:53:16 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15213
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,space=0,delta=2
    16                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 11/01/2024 GMT
    25                           ; 
    26                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F15213 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0008                     bsr             equ	8
    59     0005                     fsr0h           equ	5
    60     0004                     fsr0l           equ	4
    61     0007                     fsr1h           equ	7
    62     0006                     fsr1l           equ	6
    63     0000                     indf            equ	0
    64     0000                     indf0           equ	0
    65     0001                     indf1           equ	1
    66     000B                     intcon          equ	11
    67     0002                     pc              equ	2
    68     0002                     pcl             equ	2
    69     000A                     pclath          equ	10
    70     0003                     status          equ	3
    71     0009                     wreg            equ	9
    72     0000                     INDF0           equ	0	;# 
    73     0001                     INDF1           equ	1	;# 
    74     0002                     PCL             equ	2	;# 
    75     0003                     STATUS          equ	3	;# 
    76     0004                     FSR0L           equ	4	;# 
    77     0005                     FSR0H           equ	5	;# 
    78     0006                     FSR1L           equ	6	;# 
    79     0007                     FSR1H           equ	7	;# 
    80     0008                     BSR             equ	8	;# 
    81     0009                     WREG            equ	9	;# 
    82     000A                     PCLATH          equ	10	;# 
    83     000B                     INTCON          equ	11	;# 
    84     000C                     PORTA           equ	12	;# 
    85     0012                     TRISA           equ	18	;# 
    86     0018                     LATA            equ	24	;# 
    87     009A                     CPCON           equ	154	;# 
    88     009B                     ADRES           equ	155	;# 
    89     009B                     ADRESL          equ	155	;# 
    90     009C                     ADRESH          equ	156	;# 
    91     009D                     ADCON0          equ	157	;# 
    92     009E                     ADCON1          equ	158	;# 
    93     009F                     ADACT           equ	159	;# 
    94     0119                     RC1REG          equ	281	;# 
    95     011A                     TX1REG          equ	282	;# 
    96     011B                     SP1BRG          equ	283	;# 
    97     011B                     SP1BRGL         equ	283	;# 
    98     011C                     SP1BRGH         equ	284	;# 
    99     011D                     RC1STA          equ	285	;# 
   100     011E                     TX1STA          equ	286	;# 
   101     011F                     BAUD1CON        equ	287	;# 
   102     018C                     SSP1BUF         equ	396	;# 
   103     018D                     SSP1ADD         equ	397	;# 
   104     018E                     SSP1MSK         equ	398	;# 
   105     018F                     SSP1STAT        equ	399	;# 
   106     0190                     SSP1CON1        equ	400	;# 
   107     0191                     SSP1CON2        equ	401	;# 
   108     0192                     SSP1CON3        equ	402	;# 
   109     020C                     TMR1            equ	524	;# 
   110     020C                     TMR1L           equ	524	;# 
   111     020D                     TMR1H           equ	525	;# 
   112     020E                     T1CON           equ	526	;# 
   113     020E                     TMR1CON         equ	526	;# 
   114     020F                     T1GCON          equ	527	;# 
   115     020F                     TMR1GCON        equ	527	;# 
   116     0210                     T1GATE          equ	528	;# 
   117     0210                     TMR1GATE        equ	528	;# 
   118     0211                     T1CLK           equ	529	;# 
   119     0211                     TMR1CLK         equ	529	;# 
   120     0211                     PR1             equ	529	;# 
   121     028C                     T2TMR           equ	652	;# 
   122     028C                     TMR2            equ	652	;# 
   123     028D                     T2PR            equ	653	;# 
   124     028D                     PR2             equ	653	;# 
   125     028E                     T2CON           equ	654	;# 
   126     028F                     T2HLT           equ	655	;# 
   127     0290                     T2CLKCON        equ	656	;# 
   128     0291                     T2RST           equ	657	;# 
   129     030C                     CCPR1           equ	780	;# 
   130     030C                     CCPR1L          equ	780	;# 
   131     030D                     CCPR1H          equ	781	;# 
   132     030E                     CCP1CON         equ	782	;# 
   133     030F                     CCP1CAP         equ	783	;# 
   134     0310                     CCPR2           equ	784	;# 
   135     0310                     CCPR2L          equ	784	;# 
   136     0311                     CCPR2H          equ	785	;# 
   137     0312                     CCP2CON         equ	786	;# 
   138     0313                     CCP2CAP         equ	787	;# 
   139     0314                     PWM3DC          equ	788	;# 
   140     0314                     PWM3DCL         equ	788	;# 
   141     0315                     PWM3DCH         equ	789	;# 
   142     0316                     PWM3CON         equ	790	;# 
   143     0318                     PWM4DC          equ	792	;# 
   144     0318                     PWM4DCL         equ	792	;# 
   145     0319                     PWM4DCH         equ	793	;# 
   146     031A                     PWM4CON         equ	794	;# 
   147     059C                     TMR0L           equ	1436	;# 
   148     059C                     TMR0            equ	1436	;# 
   149     059D                     TMR0H           equ	1437	;# 
   150     059D                     PR0             equ	1437	;# 
   151     059E                     T0CON0          equ	1438	;# 
   152     059F                     T0CON1          equ	1439	;# 
   153     070C                     PIR0            equ	1804	;# 
   154     070D                     PIR1            equ	1805	;# 
   155     070E                     PIR2            equ	1806	;# 
   156     0716                     PIE0            equ	1814	;# 
   157     0717                     PIE1            equ	1815	;# 
   158     0718                     PIE2            equ	1816	;# 
   159     080C                     WDTCON          equ	2060	;# 
   160     0811                     BORCON          equ	2065	;# 
   161     0813                     PCON0           equ	2067	;# 
   162     0814                     PCON1           equ	2068	;# 
   163     081A                     NVMADR          equ	2074	;# 
   164     081A                     NVMADRL         equ	2074	;# 
   165     081B                     NVMADRH         equ	2075	;# 
   166     081C                     NVMDAT          equ	2076	;# 
   167     081C                     NVMDATL         equ	2076	;# 
   168     081D                     NVMDATH         equ	2077	;# 
   169     081E                     NVMCON1         equ	2078	;# 
   170     081F                     NVMCON2         equ	2079	;# 
   171     088E                     OSCCON          equ	2190	;# 
   172     0890                     OSCSTAT         equ	2192	;# 
   173     0891                     OSCEN           equ	2193	;# 
   174     0892                     OSCTUNE         equ	2194	;# 
   175     0893                     OSCFRQ          equ	2195	;# 
   176     090C                     FVRCON          equ	2316	;# 
   177     1E8F                     PPSLOCK         equ	7823	;# 
   178     1E90                     INTPPS          equ	7824	;# 
   179     1E91                     T0CKIPPS        equ	7825	;# 
   180     1E92                     T1CKIPPS        equ	7826	;# 
   181     1E93                     T1GPPS          equ	7827	;# 
   182     1E9C                     T2INPPS         equ	7836	;# 
   183     1EA1                     CCP1PPS         equ	7841	;# 
   184     1EA2                     CCP2PPS         equ	7842	;# 
   185     1EC3                     ADACTPPS        equ	7875	;# 
   186     1EC5                     SSP1CLKPPS      equ	7877	;# 
   187     1EC6                     SSP1DATPPS      equ	7878	;# 
   188     1EC7                     SSP1SSPPS       equ	7879	;# 
   189     1ECB                     RX1PPS          equ	7883	;# 
   190     1ECB                     RX1DTPPS        equ	7883	;# 
   191     1ECB                     RXPPS           equ	7883	;# 
   192     1ECC                     CK1PPS          equ	7884	;# 
   193     1ECC                     TX1CKPPS        equ	7884	;# 
   194     1ECC                     CKPPS           equ	7884	;# 
   195     1F10                     RA0PPS          equ	7952	;# 
   196     1F11                     RA1PPS          equ	7953	;# 
   197     1F12                     RA2PPS          equ	7954	;# 
   198     1F14                     RA4PPS          equ	7956	;# 
   199     1F15                     RA5PPS          equ	7957	;# 
   200     1F38                     ANSELA          equ	7992	;# 
   201     1F39                     WPUA            equ	7993	;# 
   202     1F3A                     ODCONA          equ	7994	;# 
   203     1F3B                     SLRCONA         equ	7995	;# 
   204     1F3C                     INLVLA          equ	7996	;# 
   205     1F3D                     IOCAP           equ	7997	;# 
   206     1F3E                     IOCAN           equ	7998	;# 
   207     1F3F                     IOCAF           equ	7999	;# 
   208     1FE4                     STATUS_SHAD     equ	8164	;# 
   209     1FE5                     WREG_SHAD       equ	8165	;# 
   210     1FE6                     BSR_SHAD        equ	8166	;# 
   211     1FE7                     PCLATH_SHAD     equ	8167	;# 
   212     1FE8                     FSR0_SHAD       equ	8168	;# 
   213     1FE8                     FSR0L_SHAD      equ	8168	;# 
   214     1FE9                     FSR0H_SHAD      equ	8169	;# 
   215     1FEA                     FSR1L_SHAD      equ	8170	;# 
   216     1FEB                     FSR1H_SHAD      equ	8171	;# 
   217     1FED                     STKPTR          equ	8173	;# 
   218     1FEE                     TOSL            equ	8174	;# 
   219     1FEF                     TOSH            equ	8175	;# 
   220     0000                     INDF0           equ	0	;# 
   221     0001                     INDF1           equ	1	;# 
   222     0002                     PCL             equ	2	;# 
   223     0003                     STATUS          equ	3	;# 
   224     0004                     FSR0L           equ	4	;# 
   225     0005                     FSR0H           equ	5	;# 
   226     0006                     FSR1L           equ	6	;# 
   227     0007                     FSR1H           equ	7	;# 
   228     0008                     BSR             equ	8	;# 
   229     0009                     WREG            equ	9	;# 
   230     000A                     PCLATH          equ	10	;# 
   231     000B                     INTCON          equ	11	;# 
   232     000C                     PORTA           equ	12	;# 
   233     0012                     TRISA           equ	18	;# 
   234     0018                     LATA            equ	24	;# 
   235     009A                     CPCON           equ	154	;# 
   236     009B                     ADRES           equ	155	;# 
   237     009B                     ADRESL          equ	155	;# 
   238     009C                     ADRESH          equ	156	;# 
   239     009D                     ADCON0          equ	157	;# 
   240     009E                     ADCON1          equ	158	;# 
   241     009F                     ADACT           equ	159	;# 
   242     0119                     RC1REG          equ	281	;# 
   243     011A                     TX1REG          equ	282	;# 
   244     011B                     SP1BRG          equ	283	;# 
   245     011B                     SP1BRGL         equ	283	;# 
   246     011C                     SP1BRGH         equ	284	;# 
   247     011D                     RC1STA          equ	285	;# 
   248     011E                     TX1STA          equ	286	;# 
   249     011F                     BAUD1CON        equ	287	;# 
   250     018C                     SSP1BUF         equ	396	;# 
   251     018D                     SSP1ADD         equ	397	;# 
   252     018E                     SSP1MSK         equ	398	;# 
   253     018F                     SSP1STAT        equ	399	;# 
   254     0190                     SSP1CON1        equ	400	;# 
   255     0191                     SSP1CON2        equ	401	;# 
   256     0192                     SSP1CON3        equ	402	;# 
   257     020C                     TMR1            equ	524	;# 
   258     020C                     TMR1L           equ	524	;# 
   259     020D                     TMR1H           equ	525	;# 
   260     020E                     T1CON           equ	526	;# 
   261     020E                     TMR1CON         equ	526	;# 
   262     020F                     T1GCON          equ	527	;# 
   263     020F                     TMR1GCON        equ	527	;# 
   264     0210                     T1GATE          equ	528	;# 
   265     0210                     TMR1GATE        equ	528	;# 
   266     0211                     T1CLK           equ	529	;# 
   267     0211                     TMR1CLK         equ	529	;# 
   268     0211                     PR1             equ	529	;# 
   269     028C                     T2TMR           equ	652	;# 
   270     028C                     TMR2            equ	652	;# 
   271     028D                     T2PR            equ	653	;# 
   272     028D                     PR2             equ	653	;# 
   273     028E                     T2CON           equ	654	;# 
   274     028F                     T2HLT           equ	655	;# 
   275     0290                     T2CLKCON        equ	656	;# 
   276     0291                     T2RST           equ	657	;# 
   277     030C                     CCPR1           equ	780	;# 
   278     030C                     CCPR1L          equ	780	;# 
   279     030D                     CCPR1H          equ	781	;# 
   280     030E                     CCP1CON         equ	782	;# 
   281     030F                     CCP1CAP         equ	783	;# 
   282     0310                     CCPR2           equ	784	;# 
   283     0310                     CCPR2L          equ	784	;# 
   284     0311                     CCPR2H          equ	785	;# 
   285     0312                     CCP2CON         equ	786	;# 
   286     0313                     CCP2CAP         equ	787	;# 
   287     0314                     PWM3DC          equ	788	;# 
   288     0314                     PWM3DCL         equ	788	;# 
   289     0315                     PWM3DCH         equ	789	;# 
   290     0316                     PWM3CON         equ	790	;# 
   291     0318                     PWM4DC          equ	792	;# 
   292     0318                     PWM4DCL         equ	792	;# 
   293     0319                     PWM4DCH         equ	793	;# 
   294     031A                     PWM4CON         equ	794	;# 
   295     059C                     TMR0L           equ	1436	;# 
   296     059C                     TMR0            equ	1436	;# 
   297     059D                     TMR0H           equ	1437	;# 
   298     059D                     PR0             equ	1437	;# 
   299     059E                     T0CON0          equ	1438	;# 
   300     059F                     T0CON1          equ	1439	;# 
   301     070C                     PIR0            equ	1804	;# 
   302     070D                     PIR1            equ	1805	;# 
   303     070E                     PIR2            equ	1806	;# 
   304     0716                     PIE0            equ	1814	;# 
   305     0717                     PIE1            equ	1815	;# 
   306     0718                     PIE2            equ	1816	;# 
   307     080C                     WDTCON          equ	2060	;# 
   308     0811                     BORCON          equ	2065	;# 
   309     0813                     PCON0           equ	2067	;# 
   310     0814                     PCON1           equ	2068	;# 
   311     081A                     NVMADR          equ	2074	;# 
   312     081A                     NVMADRL         equ	2074	;# 
   313     081B                     NVMADRH         equ	2075	;# 
   314     081C                     NVMDAT          equ	2076	;# 
   315     081C                     NVMDATL         equ	2076	;# 
   316     081D                     NVMDATH         equ	2077	;# 
   317     081E                     NVMCON1         equ	2078	;# 
   318     081F                     NVMCON2         equ	2079	;# 
   319     088E                     OSCCON          equ	2190	;# 
   320     0890                     OSCSTAT         equ	2192	;# 
   321     0891                     OSCEN           equ	2193	;# 
   322     0892                     OSCTUNE         equ	2194	;# 
   323     0893                     OSCFRQ          equ	2195	;# 
   324     090C                     FVRCON          equ	2316	;# 
   325     1E8F                     PPSLOCK         equ	7823	;# 
   326     1E90                     INTPPS          equ	7824	;# 
   327     1E91                     T0CKIPPS        equ	7825	;# 
   328     1E92                     T1CKIPPS        equ	7826	;# 
   329     1E93                     T1GPPS          equ	7827	;# 
   330     1E9C                     T2INPPS         equ	7836	;# 
   331     1EA1                     CCP1PPS         equ	7841	;# 
   332     1EA2                     CCP2PPS         equ	7842	;# 
   333     1EC3                     ADACTPPS        equ	7875	;# 
   334     1EC5                     SSP1CLKPPS      equ	7877	;# 
   335     1EC6                     SSP1DATPPS      equ	7878	;# 
   336     1EC7                     SSP1SSPPS       equ	7879	;# 
   337     1ECB                     RX1PPS          equ	7883	;# 
   338     1ECB                     RX1DTPPS        equ	7883	;# 
   339     1ECB                     RXPPS           equ	7883	;# 
   340     1ECC                     CK1PPS          equ	7884	;# 
   341     1ECC                     TX1CKPPS        equ	7884	;# 
   342     1ECC                     CKPPS           equ	7884	;# 
   343     1F10                     RA0PPS          equ	7952	;# 
   344     1F11                     RA1PPS          equ	7953	;# 
   345     1F12                     RA2PPS          equ	7954	;# 
   346     1F14                     RA4PPS          equ	7956	;# 
   347     1F15                     RA5PPS          equ	7957	;# 
   348     1F38                     ANSELA          equ	7992	;# 
   349     1F39                     WPUA            equ	7993	;# 
   350     1F3A                     ODCONA          equ	7994	;# 
   351     1F3B                     SLRCONA         equ	7995	;# 
   352     1F3C                     INLVLA          equ	7996	;# 
   353     1F3D                     IOCAP           equ	7997	;# 
   354     1F3E                     IOCAN           equ	7998	;# 
   355     1F3F                     IOCAF           equ	7999	;# 
   356     1FE4                     STATUS_SHAD     equ	8164	;# 
   357     1FE5                     WREG_SHAD       equ	8165	;# 
   358     1FE6                     BSR_SHAD        equ	8166	;# 
   359     1FE7                     PCLATH_SHAD     equ	8167	;# 
   360     1FE8                     FSR0_SHAD       equ	8168	;# 
   361     1FE8                     FSR0L_SHAD      equ	8168	;# 
   362     1FE9                     FSR0H_SHAD      equ	8169	;# 
   363     1FEA                     FSR1L_SHAD      equ	8170	;# 
   364     1FEB                     FSR1H_SHAD      equ	8171	;# 
   365     1FED                     STKPTR          equ	8173	;# 
   366     1FEE                     TOSL            equ	8174	;# 
   367     1FEF                     TOSH            equ	8175	;# 
   368     0000                     INDF0           equ	0	;# 
   369     0001                     INDF1           equ	1	;# 
   370     0002                     PCL             equ	2	;# 
   371     0003                     STATUS          equ	3	;# 
   372     0004                     FSR0L           equ	4	;# 
   373     0005                     FSR0H           equ	5	;# 
   374     0006                     FSR1L           equ	6	;# 
   375     0007                     FSR1H           equ	7	;# 
   376     0008                     BSR             equ	8	;# 
   377     0009                     WREG            equ	9	;# 
   378     000A                     PCLATH          equ	10	;# 
   379     000B                     INTCON          equ	11	;# 
   380     000C                     PORTA           equ	12	;# 
   381     0012                     TRISA           equ	18	;# 
   382     0018                     LATA            equ	24	;# 
   383     009A                     CPCON           equ	154	;# 
   384     009B                     ADRES           equ	155	;# 
   385     009B                     ADRESL          equ	155	;# 
   386     009C                     ADRESH          equ	156	;# 
   387     009D                     ADCON0          equ	157	;# 
   388     009E                     ADCON1          equ	158	;# 
   389     009F                     ADACT           equ	159	;# 
   390     0119                     RC1REG          equ	281	;# 
   391     011A                     TX1REG          equ	282	;# 
   392     011B                     SP1BRG          equ	283	;# 
   393     011B                     SP1BRGL         equ	283	;# 
   394     011C                     SP1BRGH         equ	284	;# 
   395     011D                     RC1STA          equ	285	;# 
   396     011E                     TX1STA          equ	286	;# 
   397     011F                     BAUD1CON        equ	287	;# 
   398     018C                     SSP1BUF         equ	396	;# 
   399     018D                     SSP1ADD         equ	397	;# 
   400     018E                     SSP1MSK         equ	398	;# 
   401     018F                     SSP1STAT        equ	399	;# 
   402     0190                     SSP1CON1        equ	400	;# 
   403     0191                     SSP1CON2        equ	401	;# 
   404     0192                     SSP1CON3        equ	402	;# 
   405     020C                     TMR1            equ	524	;# 
   406     020C                     TMR1L           equ	524	;# 
   407     020D                     TMR1H           equ	525	;# 
   408     020E                     T1CON           equ	526	;# 
   409     020E                     TMR1CON         equ	526	;# 
   410     020F                     T1GCON          equ	527	;# 
   411     020F                     TMR1GCON        equ	527	;# 
   412     0210                     T1GATE          equ	528	;# 
   413     0210                     TMR1GATE        equ	528	;# 
   414     0211                     T1CLK           equ	529	;# 
   415     0211                     TMR1CLK         equ	529	;# 
   416     0211                     PR1             equ	529	;# 
   417     028C                     T2TMR           equ	652	;# 
   418     028C                     TMR2            equ	652	;# 
   419     028D                     T2PR            equ	653	;# 
   420     028D                     PR2             equ	653	;# 
   421     028E                     T2CON           equ	654	;# 
   422     028F                     T2HLT           equ	655	;# 
   423     0290                     T2CLKCON        equ	656	;# 
   424     0291                     T2RST           equ	657	;# 
   425     030C                     CCPR1           equ	780	;# 
   426     030C                     CCPR1L          equ	780	;# 
   427     030D                     CCPR1H          equ	781	;# 
   428     030E                     CCP1CON         equ	782	;# 
   429     030F                     CCP1CAP         equ	783	;# 
   430     0310                     CCPR2           equ	784	;# 
   431     0310                     CCPR2L          equ	784	;# 
   432     0311                     CCPR2H          equ	785	;# 
   433     0312                     CCP2CON         equ	786	;# 
   434     0313                     CCP2CAP         equ	787	;# 
   435     0314                     PWM3DC          equ	788	;# 
   436     0314                     PWM3DCL         equ	788	;# 
   437     0315                     PWM3DCH         equ	789	;# 
   438     0316                     PWM3CON         equ	790	;# 
   439     0318                     PWM4DC          equ	792	;# 
   440     0318                     PWM4DCL         equ	792	;# 
   441     0319                     PWM4DCH         equ	793	;# 
   442     031A                     PWM4CON         equ	794	;# 
   443     059C                     TMR0L           equ	1436	;# 
   444     059C                     TMR0            equ	1436	;# 
   445     059D                     TMR0H           equ	1437	;# 
   446     059D                     PR0             equ	1437	;# 
   447     059E                     T0CON0          equ	1438	;# 
   448     059F                     T0CON1          equ	1439	;# 
   449     070C                     PIR0            equ	1804	;# 
   450     070D                     PIR1            equ	1805	;# 
   451     070E                     PIR2            equ	1806	;# 
   452     0716                     PIE0            equ	1814	;# 
   453     0717                     PIE1            equ	1815	;# 
   454     0718                     PIE2            equ	1816	;# 
   455     080C                     WDTCON          equ	2060	;# 
   456     0811                     BORCON          equ	2065	;# 
   457     0813                     PCON0           equ	2067	;# 
   458     0814                     PCON1           equ	2068	;# 
   459     081A                     NVMADR          equ	2074	;# 
   460     081A                     NVMADRL         equ	2074	;# 
   461     081B                     NVMADRH         equ	2075	;# 
   462     081C                     NVMDAT          equ	2076	;# 
   463     081C                     NVMDATL         equ	2076	;# 
   464     081D                     NVMDATH         equ	2077	;# 
   465     081E                     NVMCON1         equ	2078	;# 
   466     081F                     NVMCON2         equ	2079	;# 
   467     088E                     OSCCON          equ	2190	;# 
   468     0890                     OSCSTAT         equ	2192	;# 
   469     0891                     OSCEN           equ	2193	;# 
   470     0892                     OSCTUNE         equ	2194	;# 
   471     0893                     OSCFRQ          equ	2195	;# 
   472     090C                     FVRCON          equ	2316	;# 
   473     1E8F                     PPSLOCK         equ	7823	;# 
   474     1E90                     INTPPS          equ	7824	;# 
   475     1E91                     T0CKIPPS        equ	7825	;# 
   476     1E92                     T1CKIPPS        equ	7826	;# 
   477     1E93                     T1GPPS          equ	7827	;# 
   478     1E9C                     T2INPPS         equ	7836	;# 
   479     1EA1                     CCP1PPS         equ	7841	;# 
   480     1EA2                     CCP2PPS         equ	7842	;# 
   481     1EC3                     ADACTPPS        equ	7875	;# 
   482     1EC5                     SSP1CLKPPS      equ	7877	;# 
   483     1EC6                     SSP1DATPPS      equ	7878	;# 
   484     1EC7                     SSP1SSPPS       equ	7879	;# 
   485     1ECB                     RX1PPS          equ	7883	;# 
   486     1ECB                     RX1DTPPS        equ	7883	;# 
   487     1ECB                     RXPPS           equ	7883	;# 
   488     1ECC                     CK1PPS          equ	7884	;# 
   489     1ECC                     TX1CKPPS        equ	7884	;# 
   490     1ECC                     CKPPS           equ	7884	;# 
   491     1F10                     RA0PPS          equ	7952	;# 
   492     1F11                     RA1PPS          equ	7953	;# 
   493     1F12                     RA2PPS          equ	7954	;# 
   494     1F14                     RA4PPS          equ	7956	;# 
   495     1F15                     RA5PPS          equ	7957	;# 
   496     1F38                     ANSELA          equ	7992	;# 
   497     1F39                     WPUA            equ	7993	;# 
   498     1F3A                     ODCONA          equ	7994	;# 
   499     1F3B                     SLRCONA         equ	7995	;# 
   500     1F3C                     INLVLA          equ	7996	;# 
   501     1F3D                     IOCAP           equ	7997	;# 
   502     1F3E                     IOCAN           equ	7998	;# 
   503     1F3F                     IOCAF           equ	7999	;# 
   504     1FE4                     STATUS_SHAD     equ	8164	;# 
   505     1FE5                     WREG_SHAD       equ	8165	;# 
   506     1FE6                     BSR_SHAD        equ	8166	;# 
   507     1FE7                     PCLATH_SHAD     equ	8167	;# 
   508     1FE8                     FSR0_SHAD       equ	8168	;# 
   509     1FE8                     FSR0L_SHAD      equ	8168	;# 
   510     1FE9                     FSR0H_SHAD      equ	8169	;# 
   511     1FEA                     FSR1L_SHAD      equ	8170	;# 
   512     1FEB                     FSR1H_SHAD      equ	8171	;# 
   513     1FED                     STKPTR          equ	8173	;# 
   514     1FEE                     TOSL            equ	8174	;# 
   515     1FEF                     TOSH            equ	8175	;# 
   516     0000                     INDF0           equ	0	;# 
   517     0001                     INDF1           equ	1	;# 
   518     0002                     PCL             equ	2	;# 
   519     0003                     STATUS          equ	3	;# 
   520     0004                     FSR0L           equ	4	;# 
   521     0005                     FSR0H           equ	5	;# 
   522     0006                     FSR1L           equ	6	;# 
   523     0007                     FSR1H           equ	7	;# 
   524     0008                     BSR             equ	8	;# 
   525     0009                     WREG            equ	9	;# 
   526     000A                     PCLATH          equ	10	;# 
   527     000B                     INTCON          equ	11	;# 
   528     000C                     PORTA           equ	12	;# 
   529     0012                     TRISA           equ	18	;# 
   530     0018                     LATA            equ	24	;# 
   531     009A                     CPCON           equ	154	;# 
   532     009B                     ADRES           equ	155	;# 
   533     009B                     ADRESL          equ	155	;# 
   534     009C                     ADRESH          equ	156	;# 
   535     009D                     ADCON0          equ	157	;# 
   536     009E                     ADCON1          equ	158	;# 
   537     009F                     ADACT           equ	159	;# 
   538     0119                     RC1REG          equ	281	;# 
   539     011A                     TX1REG          equ	282	;# 
   540     011B                     SP1BRG          equ	283	;# 
   541     011B                     SP1BRGL         equ	283	;# 
   542     011C                     SP1BRGH         equ	284	;# 
   543     011D                     RC1STA          equ	285	;# 
   544     011E                     TX1STA          equ	286	;# 
   545     011F                     BAUD1CON        equ	287	;# 
   546     018C                     SSP1BUF         equ	396	;# 
   547     018D                     SSP1ADD         equ	397	;# 
   548     018E                     SSP1MSK         equ	398	;# 
   549     018F                     SSP1STAT        equ	399	;# 
   550     0190                     SSP1CON1        equ	400	;# 
   551     0191                     SSP1CON2        equ	401	;# 
   552     0192                     SSP1CON3        equ	402	;# 
   553     020C                     TMR1            equ	524	;# 
   554     020C                     TMR1L           equ	524	;# 
   555     020D                     TMR1H           equ	525	;# 
   556     020E                     T1CON           equ	526	;# 
   557     020E                     TMR1CON         equ	526	;# 
   558     020F                     T1GCON          equ	527	;# 
   559     020F                     TMR1GCON        equ	527	;# 
   560     0210                     T1GATE          equ	528	;# 
   561     0210                     TMR1GATE        equ	528	;# 
   562     0211                     T1CLK           equ	529	;# 
   563     0211                     TMR1CLK         equ	529	;# 
   564     0211                     PR1             equ	529	;# 
   565     028C                     T2TMR           equ	652	;# 
   566     028C                     TMR2            equ	652	;# 
   567     028D                     T2PR            equ	653	;# 
   568     028D                     PR2             equ	653	;# 
   569     028E                     T2CON           equ	654	;# 
   570     028F                     T2HLT           equ	655	;# 
   571     0290                     T2CLKCON        equ	656	;# 
   572     0291                     T2RST           equ	657	;# 
   573     030C                     CCPR1           equ	780	;# 
   574     030C                     CCPR1L          equ	780	;# 
   575     030D                     CCPR1H          equ	781	;# 
   576     030E                     CCP1CON         equ	782	;# 
   577     030F                     CCP1CAP         equ	783	;# 
   578     0310                     CCPR2           equ	784	;# 
   579     0310                     CCPR2L          equ	784	;# 
   580     0311                     CCPR2H          equ	785	;# 
   581     0312                     CCP2CON         equ	786	;# 
   582     0313                     CCP2CAP         equ	787	;# 
   583     0314                     PWM3DC          equ	788	;# 
   584     0314                     PWM3DCL         equ	788	;# 
   585     0315                     PWM3DCH         equ	789	;# 
   586     0316                     PWM3CON         equ	790	;# 
   587     0318                     PWM4DC          equ	792	;# 
   588     0318                     PWM4DCL         equ	792	;# 
   589     0319                     PWM4DCH         equ	793	;# 
   590     031A                     PWM4CON         equ	794	;# 
   591     059C                     TMR0L           equ	1436	;# 
   592     059C                     TMR0            equ	1436	;# 
   593     059D                     TMR0H           equ	1437	;# 
   594     059D                     PR0             equ	1437	;# 
   595     059E                     T0CON0          equ	1438	;# 
   596     059F                     T0CON1          equ	1439	;# 
   597     070C                     PIR0            equ	1804	;# 
   598     070D                     PIR1            equ	1805	;# 
   599     070E                     PIR2            equ	1806	;# 
   600     0716                     PIE0            equ	1814	;# 
   601     0717                     PIE1            equ	1815	;# 
   602     0718                     PIE2            equ	1816	;# 
   603     080C                     WDTCON          equ	2060	;# 
   604     0811                     BORCON          equ	2065	;# 
   605     0813                     PCON0           equ	2067	;# 
   606     0814                     PCON1           equ	2068	;# 
   607     081A                     NVMADR          equ	2074	;# 
   608     081A                     NVMADRL         equ	2074	;# 
   609     081B                     NVMADRH         equ	2075	;# 
   610     081C                     NVMDAT          equ	2076	;# 
   611     081C                     NVMDATL         equ	2076	;# 
   612     081D                     NVMDATH         equ	2077	;# 
   613     081E                     NVMCON1         equ	2078	;# 
   614     081F                     NVMCON2         equ	2079	;# 
   615     088E                     OSCCON          equ	2190	;# 
   616     0890                     OSCSTAT         equ	2192	;# 
   617     0891                     OSCEN           equ	2193	;# 
   618     0892                     OSCTUNE         equ	2194	;# 
   619     0893                     OSCFRQ          equ	2195	;# 
   620     090C                     FVRCON          equ	2316	;# 
   621     1E8F                     PPSLOCK         equ	7823	;# 
   622     1E90                     INTPPS          equ	7824	;# 
   623     1E91                     T0CKIPPS        equ	7825	;# 
   624     1E92                     T1CKIPPS        equ	7826	;# 
   625     1E93                     T1GPPS          equ	7827	;# 
   626     1E9C                     T2INPPS         equ	7836	;# 
   627     1EA1                     CCP1PPS         equ	7841	;# 
   628     1EA2                     CCP2PPS         equ	7842	;# 
   629     1EC3                     ADACTPPS        equ	7875	;# 
   630     1EC5                     SSP1CLKPPS      equ	7877	;# 
   631     1EC6                     SSP1DATPPS      equ	7878	;# 
   632     1EC7                     SSP1SSPPS       equ	7879	;# 
   633     1ECB                     RX1PPS          equ	7883	;# 
   634     1ECB                     RX1DTPPS        equ	7883	;# 
   635     1ECB                     RXPPS           equ	7883	;# 
   636     1ECC                     CK1PPS          equ	7884	;# 
   637     1ECC                     TX1CKPPS        equ	7884	;# 
   638     1ECC                     CKPPS           equ	7884	;# 
   639     1F10                     RA0PPS          equ	7952	;# 
   640     1F11                     RA1PPS          equ	7953	;# 
   641     1F12                     RA2PPS          equ	7954	;# 
   642     1F14                     RA4PPS          equ	7956	;# 
   643     1F15                     RA5PPS          equ	7957	;# 
   644     1F38                     ANSELA          equ	7992	;# 
   645     1F39                     WPUA            equ	7993	;# 
   646     1F3A                     ODCONA          equ	7994	;# 
   647     1F3B                     SLRCONA         equ	7995	;# 
   648     1F3C                     INLVLA          equ	7996	;# 
   649     1F3D                     IOCAP           equ	7997	;# 
   650     1F3E                     IOCAN           equ	7998	;# 
   651     1F3F                     IOCAF           equ	7999	;# 
   652     1FE4                     STATUS_SHAD     equ	8164	;# 
   653     1FE5                     WREG_SHAD       equ	8165	;# 
   654     1FE6                     BSR_SHAD        equ	8166	;# 
   655     1FE7                     PCLATH_SHAD     equ	8167	;# 
   656     1FE8                     FSR0_SHAD       equ	8168	;# 
   657     1FE8                     FSR0L_SHAD      equ	8168	;# 
   658     1FE9                     FSR0H_SHAD      equ	8169	;# 
   659     1FEA                     FSR1L_SHAD      equ	8170	;# 
   660     1FEB                     FSR1H_SHAD      equ	8171	;# 
   661     1FED                     STKPTR          equ	8173	;# 
   662     1FEE                     TOSL            equ	8174	;# 
   663     1FEF                     TOSH            equ	8175	;# 
   664     0000                     INDF0           equ	0	;# 
   665     0001                     INDF1           equ	1	;# 
   666     0002                     PCL             equ	2	;# 
   667     0003                     STATUS          equ	3	;# 
   668     0004                     FSR0L           equ	4	;# 
   669     0005                     FSR0H           equ	5	;# 
   670     0006                     FSR1L           equ	6	;# 
   671     0007                     FSR1H           equ	7	;# 
   672     0008                     BSR             equ	8	;# 
   673     0009                     WREG            equ	9	;# 
   674     000A                     PCLATH          equ	10	;# 
   675     000B                     INTCON          equ	11	;# 
   676     000C                     PORTA           equ	12	;# 
   677     0012                     TRISA           equ	18	;# 
   678     0018                     LATA            equ	24	;# 
   679     009A                     CPCON           equ	154	;# 
   680     009B                     ADRES           equ	155	;# 
   681     009B                     ADRESL          equ	155	;# 
   682     009C                     ADRESH          equ	156	;# 
   683     009D                     ADCON0          equ	157	;# 
   684     009E                     ADCON1          equ	158	;# 
   685     009F                     ADACT           equ	159	;# 
   686     0119                     RC1REG          equ	281	;# 
   687     011A                     TX1REG          equ	282	;# 
   688     011B                     SP1BRG          equ	283	;# 
   689     011B                     SP1BRGL         equ	283	;# 
   690     011C                     SP1BRGH         equ	284	;# 
   691     011D                     RC1STA          equ	285	;# 
   692     011E                     TX1STA          equ	286	;# 
   693     011F                     BAUD1CON        equ	287	;# 
   694     018C                     SSP1BUF         equ	396	;# 
   695     018D                     SSP1ADD         equ	397	;# 
   696     018E                     SSP1MSK         equ	398	;# 
   697     018F                     SSP1STAT        equ	399	;# 
   698     0190                     SSP1CON1        equ	400	;# 
   699     0191                     SSP1CON2        equ	401	;# 
   700     0192                     SSP1CON3        equ	402	;# 
   701     020C                     TMR1            equ	524	;# 
   702     020C                     TMR1L           equ	524	;# 
   703     020D                     TMR1H           equ	525	;# 
   704     020E                     T1CON           equ	526	;# 
   705     020E                     TMR1CON         equ	526	;# 
   706     020F                     T1GCON          equ	527	;# 
   707     020F                     TMR1GCON        equ	527	;# 
   708     0210                     T1GATE          equ	528	;# 
   709     0210                     TMR1GATE        equ	528	;# 
   710     0211                     T1CLK           equ	529	;# 
   711     0211                     TMR1CLK         equ	529	;# 
   712     0211                     PR1             equ	529	;# 
   713     028C                     T2TMR           equ	652	;# 
   714     028C                     TMR2            equ	652	;# 
   715     028D                     T2PR            equ	653	;# 
   716     028D                     PR2             equ	653	;# 
   717     028E                     T2CON           equ	654	;# 
   718     028F                     T2HLT           equ	655	;# 
   719     0290                     T2CLKCON        equ	656	;# 
   720     0291                     T2RST           equ	657	;# 
   721     030C                     CCPR1           equ	780	;# 
   722     030C                     CCPR1L          equ	780	;# 
   723     030D                     CCPR1H          equ	781	;# 
   724     030E                     CCP1CON         equ	782	;# 
   725     030F                     CCP1CAP         equ	783	;# 
   726     0310                     CCPR2           equ	784	;# 
   727     0310                     CCPR2L          equ	784	;# 
   728     0311                     CCPR2H          equ	785	;# 
   729     0312                     CCP2CON         equ	786	;# 
   730     0313                     CCP2CAP         equ	787	;# 
   731     0314                     PWM3DC          equ	788	;# 
   732     0314                     PWM3DCL         equ	788	;# 
   733     0315                     PWM3DCH         equ	789	;# 
   734     0316                     PWM3CON         equ	790	;# 
   735     0318                     PWM4DC          equ	792	;# 
   736     0318                     PWM4DCL         equ	792	;# 
   737     0319                     PWM4DCH         equ	793	;# 
   738     031A                     PWM4CON         equ	794	;# 
   739     059C                     TMR0L           equ	1436	;# 
   740     059C                     TMR0            equ	1436	;# 
   741     059D                     TMR0H           equ	1437	;# 
   742     059D                     PR0             equ	1437	;# 
   743     059E                     T0CON0          equ	1438	;# 
   744     059F                     T0CON1          equ	1439	;# 
   745     070C                     PIR0            equ	1804	;# 
   746     070D                     PIR1            equ	1805	;# 
   747     070E                     PIR2            equ	1806	;# 
   748     0716                     PIE0            equ	1814	;# 
   749     0717                     PIE1            equ	1815	;# 
   750     0718                     PIE2            equ	1816	;# 
   751     080C                     WDTCON          equ	2060	;# 
   752     0811                     BORCON          equ	2065	;# 
   753     0813                     PCON0           equ	2067	;# 
   754     0814                     PCON1           equ	2068	;# 
   755     081A                     NVMADR          equ	2074	;# 
   756     081A                     NVMADRL         equ	2074	;# 
   757     081B                     NVMADRH         equ	2075	;# 
   758     081C                     NVMDAT          equ	2076	;# 
   759     081C                     NVMDATL         equ	2076	;# 
   760     081D                     NVMDATH         equ	2077	;# 
   761     081E                     NVMCON1         equ	2078	;# 
   762     081F                     NVMCON2         equ	2079	;# 
   763     088E                     OSCCON          equ	2190	;# 
   764     0890                     OSCSTAT         equ	2192	;# 
   765     0891                     OSCEN           equ	2193	;# 
   766     0892                     OSCTUNE         equ	2194	;# 
   767     0893                     OSCFRQ          equ	2195	;# 
   768     090C                     FVRCON          equ	2316	;# 
   769     1E8F                     PPSLOCK         equ	7823	;# 
   770     1E90                     INTPPS          equ	7824	;# 
   771     1E91                     T0CKIPPS        equ	7825	;# 
   772     1E92                     T1CKIPPS        equ	7826	;# 
   773     1E93                     T1GPPS          equ	7827	;# 
   774     1E9C                     T2INPPS         equ	7836	;# 
   775     1EA1                     CCP1PPS         equ	7841	;# 
   776     1EA2                     CCP2PPS         equ	7842	;# 
   777     1EC3                     ADACTPPS        equ	7875	;# 
   778     1EC5                     SSP1CLKPPS      equ	7877	;# 
   779     1EC6                     SSP1DATPPS      equ	7878	;# 
   780     1EC7                     SSP1SSPPS       equ	7879	;# 
   781     1ECB                     RX1PPS          equ	7883	;# 
   782     1ECB                     RX1DTPPS        equ	7883	;# 
   783     1ECB                     RXPPS           equ	7883	;# 
   784     1ECC                     CK1PPS          equ	7884	;# 
   785     1ECC                     TX1CKPPS        equ	7884	;# 
   786     1ECC                     CKPPS           equ	7884	;# 
   787     1F10                     RA0PPS          equ	7952	;# 
   788     1F11                     RA1PPS          equ	7953	;# 
   789     1F12                     RA2PPS          equ	7954	;# 
   790     1F14                     RA4PPS          equ	7956	;# 
   791     1F15                     RA5PPS          equ	7957	;# 
   792     1F38                     ANSELA          equ	7992	;# 
   793     1F39                     WPUA            equ	7993	;# 
   794     1F3A                     ODCONA          equ	7994	;# 
   795     1F3B                     SLRCONA         equ	7995	;# 
   796     1F3C                     INLVLA          equ	7996	;# 
   797     1F3D                     IOCAP           equ	7997	;# 
   798     1F3E                     IOCAN           equ	7998	;# 
   799     1F3F                     IOCAF           equ	7999	;# 
   800     1FE4                     STATUS_SHAD     equ	8164	;# 
   801     1FE5                     WREG_SHAD       equ	8165	;# 
   802     1FE6                     BSR_SHAD        equ	8166	;# 
   803     1FE7                     PCLATH_SHAD     equ	8167	;# 
   804     1FE8                     FSR0_SHAD       equ	8168	;# 
   805     1FE8                     FSR0L_SHAD      equ	8168	;# 
   806     1FE9                     FSR0H_SHAD      equ	8169	;# 
   807     1FEA                     FSR1L_SHAD      equ	8170	;# 
   808     1FEB                     FSR1H_SHAD      equ	8171	;# 
   809     1FED                     STKPTR          equ	8173	;# 
   810     1FEE                     TOSL            equ	8174	;# 
   811     1FEF                     TOSH            equ	8175	;# 
   812                           
   813 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
   814     0000                     _INT_DefaultInterruptHandler equ	0
   815                           
   816                           	psect	nvCOMMON
   817     0070                     __pnvCOMMON:
   818     0070                     _CHARGING_N_InterruptHandler:
   819     0070                     	ds	2
   820     0072                     _SWITCH_N_InterruptHandler:
   821     0072                     	ds	2
   822     0074                     _INT_InterruptHandler:
   823     0074                     	ds	2
   824     0012                     _TRISA          set	18
   825     0018                     _LATA           set	24
   826     000B                     _INTCONbits     set	11
   827     0716                     _PIE0bits       set	1814
   828     070C                     _PIR0bits       set	1804
   829     0892                     _OSCTUNE        set	2194
   830     0893                     _OSCFRQ         set	2195
   831     0891                     _OSCEN          set	2193
   832     1F3F                     _IOCAFbits      set	7999
   833     1F3F                     _IOCAF          set	7999
   834     1F3E                     _IOCAN          set	7998
   835     1F3D                     _IOCAP          set	7997
   836     1F3C                     _INLVLA         set	7996
   837     1F3B                     _SLRCONA        set	7995
   838     1F3A                     _ODCONA         set	7994
   839     1F39                     _WPUA           set	7993
   840     1F38                     _ANSELA         set	7992
   841                           
   842                           	psect	cinit
   843     0015                     start_initialization:	
   844                           ; #config settings
   845                           
   846     0015                     __initialization:
   847     0015                     end_of_initialization:	
   848                           ;End of C runtime variable initialization code
   849                           
   850     0015                     __end_of__initialization:
   851     0015  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   852     0016  0140               	movlb	0
   853     0017  287D               	ljmp	_main	;jump to C main() function
   854                           
   855                           	psect	cstackCOMMON
   856     0076                     __pcstackCOMMON:
   857     0076                     ?_SYSTEM_Initialize:
   858     0076                     ?_PIN_MANAGER_Initialize:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0076                     ?_INTERRUPT_Initialize:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0076                     ?_INT_SetInterruptHandler:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0076                     ?_PIN_MANAGER_IOC:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0076                     ?_SWITCH_N_SetInterruptHandler:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0076                     ?_SWITCH_N_DefaultInterruptHandler:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0076                     ?_CHARGING_N_SetInterruptHandler:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0076                     ?_CHARGING_N_DefaultInterruptHandler:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0076                     ?_SWITCH_N_ISR:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0076                     ?_CHARGING_N_ISR:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0076                     ?_CLOCK_Initialize:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0076                     ?_INTERRUPT_InterruptManager:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0076                     ?_main:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0076                     INT_SetInterruptHandler@InterruptHandler:	
   898                           ; 2 bytes @ 0x0
   899                           
   900     0076                     SWITCH_N_SetInterruptHandler@InterruptHandler:	
   901                           ; 2 bytes @ 0x0
   902                           
   903     0076                     CHARGING_N_SetInterruptHandler@InterruptHandler:	
   904                           ; 2 bytes @ 0x0
   905                           
   906     0076                     ??_PIN_MANAGER_IOC:	
   907                           ; 2 bytes @ 0x0
   908                           
   909     0076                     ??_SWITCH_N_DefaultInterruptHandler:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0076                     ??_CHARGING_N_DefaultInterruptHandler:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0076                     ??_SWITCH_N_ISR:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0076                     ??_CHARGING_N_ISR:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0076                     ??_CLOCK_Initialize:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0076                     ??_INTERRUPT_InterruptManager:	
   925                           ; 1 bytes @ 0x0
   926                           
   927                           
   928                           ; 1 bytes @ 0x0
   929     0076                     	ds	2
   930     0078                     ??_SYSTEM_Initialize:
   931     0078                     ??_PIN_MANAGER_Initialize:	
   932                           ; 1 bytes @ 0x2
   933                           
   934     0078                     ??_INTERRUPT_Initialize:	
   935                           ; 1 bytes @ 0x2
   936                           
   937     0078                     ??_INT_SetInterruptHandler:	
   938                           ; 1 bytes @ 0x2
   939                           
   940     0078                     ??_SWITCH_N_SetInterruptHandler:	
   941                           ; 1 bytes @ 0x2
   942                           
   943     0078                     ??_CHARGING_N_SetInterruptHandler:	
   944                           ; 1 bytes @ 0x2
   945                           
   946     0078                     ??_main:	
   947                           ; 1 bytes @ 0x2
   948                           
   949                           
   950                           	psect	maintext
   951     007D                     __pmaintext:	
   952                           ; 1 bytes @ 0x2
   953 ;;
   954 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   955 ;;
   956 ;; *************** function _main *****************
   957 ;; Defined at:
   958 ;;		line 41 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    6[None  ] int 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : B3F/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   972 ;;      Params:         0       0       0       0
   973 ;;      Locals:         0       0       0       0
   974 ;;      Temps:          0       0       0       0
   975 ;;      Totals:         0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels required when called: 7
   978 ;; This function calls:
   979 ;;		_SYSTEM_Initialize
   980 ;; This function is called by:
   981 ;;		Startup code after reset
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     007D                     _main:	
   986                           ;psect for function _main
   987                           
   988     007D                     l763:	
   989                           ;incstack = 0
   990                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   991                           
   992                           
   993                           ;main.c: 43:     SYSTEM_Initialize();
   994     007D  3180  2073  3180   	fcall	_SYSTEM_Initialize
   995     0080                     l7:	
   996                           ;main.c: 61:     while(1)
   997                           
   998     0080                     l8:	
   999                           ;main.c: 62:     {;main.c: 63:     }
  1000                           
  1001     0080  2880               	goto	l7
  1002     0081  2814               	ljmp	start
  1003     0082                     __end_of_main:
  1004                           
  1005                           	psect	text1
  1006     0073                     __ptext1:	
  1007 ;; *************** function _SYSTEM_Initialize *****************
  1008 ;; Defined at:
  1009 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, pclath, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1023 ;;      Params:         0       0       0       0
  1024 ;;      Locals:         0       0       0       0
  1025 ;;      Temps:          0       0       0       0
  1026 ;;      Totals:         0       0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 6
  1030 ;; This function calls:
  1031 ;;		_CLOCK_Initialize
  1032 ;;		_INTERRUPT_Initialize
  1033 ;;		_PIN_MANAGER_Initialize
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     0073                     _SYSTEM_Initialize:	
  1040                           ;psect for function _SYSTEM_Initialize
  1041                           
  1042     0073                     l757:	
  1043                           ;incstack = 0
  1044                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1045                           
  1046                           
  1047                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  1048     0073  3180  2091  3180   	fcall	_CLOCK_Initialize
  1049     0076                     l759:
  1050                           
  1051                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  1052     0076  3180  2018  3180   	fcall	_PIN_MANAGER_Initialize
  1053     0079                     l761:
  1054                           
  1055                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1056     0079  3180  2068  3180   	fcall	_INTERRUPT_Initialize
  1057     007C                     l28:
  1058     007C  0008               	return
  1059     007D                     __end_of_SYSTEM_Initialize:
  1060                           
  1061                           	psect	text2
  1062     0018                     __ptext2:	
  1063 ;; *************** function _PIN_MANAGER_Initialize *****************
  1064 ;; Defined at:
  1065 ;;		line 40 in file "mcc_generated_files/system/src/pins.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       0       0       0
  1080 ;;      Locals:         0       0       0       0
  1081 ;;      Temps:          0       0       0       0
  1082 ;;      Totals:         0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 5
  1086 ;; This function calls:
  1087 ;;		_CHARGING_N_SetInterruptHandler
  1088 ;;		_SWITCH_N_SetInterruptHandler
  1089 ;; This function is called by:
  1090 ;;		_SYSTEM_Initialize
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094     0018                     _PIN_MANAGER_Initialize:	
  1095                           ;psect for function _PIN_MANAGER_Initialize
  1096                           
  1097     0018                     l737:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1100                           
  1101                           
  1102                           ;mcc_generated_files/system/src/pins.c: 45:     LATA = 0x4;
  1103     0018  3004               	movlw	4
  1104     0019  0140               	movlb	0	; select bank0
  1105     001A  0098               	movwf	24	;volatile
  1106                           
  1107                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  1108     001B  303B               	movlw	59
  1109     001C  0092               	movwf	18	;volatile
  1110                           
  1111                           ;mcc_generated_files/system/src/pins.c: 55:     ANSELA = 0x3;
  1112     001D  3003               	movlw	3
  1113     001E  017E               	movlb	62	; select bank62
  1114     001F  00B8               	movwf	56	;volatile
  1115     0020                     l739:
  1116                           
  1117                           ;mcc_generated_files/system/src/pins.c: 60:     WPUA = 0x0;
  1118     0020  01B9               	clrf	57	;volatile
  1119                           
  1120                           ;mcc_generated_files/system/src/pins.c: 66:     ODCONA = 0x0;
  1121     0021  01BA               	clrf	58	;volatile
  1122     0022                     l741:
  1123                           
  1124                           ;mcc_generated_files/system/src/pins.c: 70:     SLRCONA = 0x37;
  1125     0022  3037               	movlw	55
  1126     0023  00BB               	movwf	59	;volatile
  1127     0024                     l743:
  1128                           
  1129                           ;mcc_generated_files/system/src/pins.c: 74:     INLVLA = 0x3F;
  1130     0024  303F               	movlw	63
  1131     0025  00BC               	movwf	60	;volatile
  1132                           
  1133                           ;mcc_generated_files/system/src/pins.c: 87:     IOCAP = 0x0;
  1134     0026  01BD               	clrf	61	;volatile
  1135     0027                     l745:
  1136                           
  1137                           ;mcc_generated_files/system/src/pins.c: 88:     IOCAN = 0x30;
  1138     0027  3030               	movlw	48
  1139     0028  00BE               	movwf	62	;volatile
  1140                           
  1141                           ;mcc_generated_files/system/src/pins.c: 89:     IOCAF = 0x0;
  1142     0029  01BF               	clrf	63	;volatile
  1143     002A                     l747:
  1144                           
  1145                           ;mcc_generated_files/system/src/pins.c: 91:     SWITCH_N_SetInterruptHandler(SWITCH_N_De
      +                          faultInterruptHandler);
  1146     002A  3096               	movlw	low _SWITCH_N_DefaultInterruptHandler
  1147     002B  00F6               	movwf	SWITCH_N_SetInterruptHandler@InterruptHandler
  1148     002C  3000               	movlw	high _SWITCH_N_DefaultInterruptHandler
  1149     002D  00F7               	movwf	SWITCH_N_SetInterruptHandler@InterruptHandler+1
  1150     002E  3180  2082  3180   	fcall	_SWITCH_N_SetInterruptHandler
  1151     0031                     l749:
  1152                           
  1153                           ;mcc_generated_files/system/src/pins.c: 92:     CHARGING_N_SetInterruptHandler(CHARGING_
      +                          N_DefaultInterruptHandler);
  1154     0031  3097               	movlw	low _CHARGING_N_DefaultInterruptHandler
  1155     0032  00F6               	movwf	CHARGING_N_SetInterruptHandler@InterruptHandler
  1156     0033  3000               	movlw	high _CHARGING_N_DefaultInterruptHandler
  1157     0034  00F7               	movwf	CHARGING_N_SetInterruptHandler@InterruptHandler+1
  1158     0035  3180  2087  3180   	fcall	_CHARGING_N_SetInterruptHandler
  1159     0038                     l751:
  1160                           
  1161                           ;mcc_generated_files/system/src/pins.c: 95:     PIE0bits.IOCIE = 1;
  1162     0038  014E               	movlb	14	; select bank14
  1163     0039  1616               	bsf	22,4	;volatile
  1164     003A                     l110:
  1165     003A  0008               	return
  1166     003B                     __end_of_PIN_MANAGER_Initialize:
  1167                           
  1168                           	psect	text3
  1169     0082                     __ptext3:	
  1170 ;; *************** function _SWITCH_N_SetInterruptHandler *****************
  1171 ;; Defined at:
  1172 ;;		line 130 in file "mcc_generated_files/system/src/pins.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1175 ;;		 -> SWITCH_N_DefaultInterruptHandler(1), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1187 ;;      Params:         2       0       0       0
  1188 ;;      Locals:         0       0       0       0
  1189 ;;      Temps:          0       0       0       0
  1190 ;;      Totals:         2       0       0       0
  1191 ;;Total ram usage:        2 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 4
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_PIN_MANAGER_Initialize
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201     0082                     _SWITCH_N_SetInterruptHandler:	
  1202                           ;psect for function _SWITCH_N_SetInterruptHandler
  1203                           
  1204     0082                     l733:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _SWITCH_N_SetInterruptHandler: [wreg]
  1207                           
  1208                           
  1209                           ;mcc_generated_files/system/src/pins.c: 131:     SWITCH_N_InterruptHandler = InterruptHa
      +                          ndler;
  1210     0082  0877               	movf	SWITCH_N_SetInterruptHandler@InterruptHandler+1,w
  1211     0083  00F3               	movwf	_SWITCH_N_InterruptHandler+1
  1212     0084  0876               	movf	SWITCH_N_SetInterruptHandler@InterruptHandler,w
  1213     0085  00F2               	movwf	_SWITCH_N_InterruptHandler
  1214     0086                     l122:
  1215     0086  0008               	return
  1216     0087                     __end_of_SWITCH_N_SetInterruptHandler:
  1217                           
  1218                           	psect	text4
  1219     0087                     __ptext4:	
  1220 ;; *************** function _CHARGING_N_SetInterruptHandler *****************
  1221 ;; Defined at:
  1222 ;;		line 160 in file "mcc_generated_files/system/src/pins.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1225 ;;		 -> CHARGING_N_DefaultInterruptHandler(1), 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1237 ;;      Params:         2       0       0       0
  1238 ;;      Locals:         0       0       0       0
  1239 ;;      Temps:          0       0       0       0
  1240 ;;      Totals:         2       0       0       0
  1241 ;;Total ram usage:        2 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 4
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_PIN_MANAGER_Initialize
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251     0087                     _CHARGING_N_SetInterruptHandler:	
  1252                           ;psect for function _CHARGING_N_SetInterruptHandler
  1253                           
  1254     0087                     l735:	
  1255                           ;incstack = 0
  1256                           ; Regs used in _CHARGING_N_SetInterruptHandler: [wreg]
  1257                           
  1258                           
  1259                           ;mcc_generated_files/system/src/pins.c: 161:     CHARGING_N_InterruptHandler = Interrupt
      +                          Handler;
  1260     0087  0877               	movf	CHARGING_N_SetInterruptHandler@InterruptHandler+1,w
  1261     0088  00F1               	movwf	_CHARGING_N_InterruptHandler+1
  1262     0089  0876               	movf	CHARGING_N_SetInterruptHandler@InterruptHandler,w
  1263     008A  00F0               	movwf	_CHARGING_N_InterruptHandler
  1264     008B                     l132:
  1265     008B  0008               	return
  1266     008C                     __end_of_CHARGING_N_SetInterruptHandler:
  1267                           
  1268                           	psect	text5
  1269     0068                     __ptext5:	
  1270 ;; *************** function _INTERRUPT_Initialize *****************
  1271 ;; Defined at:
  1272 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1286 ;;      Params:         0       0       0       0
  1287 ;;      Locals:         0       0       0       0
  1288 ;;      Temps:          0       0       0       0
  1289 ;;      Totals:         0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 5
  1293 ;; This function calls:
  1294 ;;		_INT_SetInterruptHandler
  1295 ;; This function is called by:
  1296 ;;		_SYSTEM_Initialize
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300     0068                     _INTERRUPT_Initialize:	
  1301                           ;psect for function _INTERRUPT_Initialize
  1302                           
  1303     0068                     l753:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1306                           
  1307                           
  1308                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
  1309     0068  014E               	movlb	14	; select bank14
  1310     0069  100C               	bcf	12,0	;volatile
  1311                           
  1312                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
  1313     006A  140B               	bsf	11,0	;volatile
  1314     006B                     l755:
  1315                           
  1316                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  1317     006B  3000               	movlw	0
  1318     006C  00F6               	movwf	INT_SetInterruptHandler@InterruptHandler
  1319     006D  3000               	movlw	0
  1320     006E  00F7               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  1321     006F  3180  208C  3180   	fcall	_INT_SetInterruptHandler
  1322     0072                     l47:
  1323     0072  0008               	return
  1324     0073                     __end_of_INTERRUPT_Initialize:
  1325                           
  1326                           	psect	text6
  1327     008C                     __ptext6:	
  1328 ;; *************** function _INT_SetInterruptHandler *****************
  1329 ;; Defined at:
  1330 ;;		line 90 in file "mcc_generated_files/system/src/interrupt.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1333 ;;		 -> INT_DefaultInterruptHandler(1), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1345 ;;      Params:         2       0       0       0
  1346 ;;      Locals:         0       0       0       0
  1347 ;;      Temps:          0       0       0       0
  1348 ;;      Totals:         2       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 4
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_INTERRUPT_Initialize
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359     008C                     _INT_SetInterruptHandler:	
  1360                           ;psect for function _INT_SetInterruptHandler
  1361                           
  1362     008C                     l731:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  1365                           
  1366                           
  1367                           ;mcc_generated_files/system/src/interrupt.c: 91:     INT_InterruptHandler = InterruptHan
      +                          dler;
  1368     008C  0877               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  1369     008D  00F5               	movwf	_INT_InterruptHandler+1
  1370     008E  0876               	movf	INT_SetInterruptHandler@InterruptHandler,w
  1371     008F  00F4               	movwf	_INT_InterruptHandler
  1372     0090                     l64:
  1373     0090  0008               	return
  1374     0091                     __end_of_INT_SetInterruptHandler:
  1375                           
  1376                           	psect	text7
  1377     0091                     __ptext7:	
  1378 ;; *************** function _CLOCK_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1394 ;;      Params:         0       0       0       0
  1395 ;;      Locals:         0       0       0       0
  1396 ;;      Temps:          0       0       0       0
  1397 ;;      Totals:         0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 4
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_SYSTEM_Initialize
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408     0091                     _CLOCK_Initialize:	
  1409                           ;psect for function _CLOCK_Initialize
  1410                           
  1411     0091                     l667:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _CLOCK_Initialize: [status,2]
  1414                           
  1415                           
  1416                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  1417     0091  0151               	movlb	17	; select bank17
  1418     0092  0191               	clrf	17	;volatile
  1419                           
  1420                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (0 << 0x0);
  1421     0093  0193               	clrf	19	;volatile
  1422                           
  1423                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  1424     0094  0192               	clrf	18	;volatile
  1425     0095                     l19:
  1426     0095  0008               	return
  1427     0096                     __end_of_CLOCK_Initialize:
  1428                           
  1429                           	psect	intentry
  1430     0004                     __pintentry:	
  1431 ;; *************** function _INTERRUPT_InterruptManager *****************
  1432 ;; Defined at:
  1433 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1447 ;;      Params:         0       0       0       0
  1448 ;;      Locals:         0       0       0       0
  1449 ;;      Temps:          0       0       0       0
  1450 ;;      Totals:         0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 3
  1454 ;; This function calls:
  1455 ;;		_PIN_MANAGER_IOC
  1456 ;; This function is called by:
  1457 ;;		Interrupt level 1
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461     0004                     _INTERRUPT_InterruptManager:
  1462                           
  1463                           ;incstack = 0
  1464     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1465                           
  1466                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1467     0005  3180               	pagesel	$
  1468     0006                     i1l717:
  1469                           
  1470                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  1471     0006  014E               	movlb	14	; select bank14
  1472     0007  1E16               	btfss	22,4	;volatile
  1473     0008  280A               	goto	u5_21
  1474     0009  280B               	goto	u5_20
  1475     000A                     u5_21:
  1476     000A  2812               	goto	i1l54
  1477     000B                     u5_20:
  1478     000B                     i1l719:
  1479     000B  1E0C               	btfss	12,4	;volatile
  1480     000C  280E               	goto	u6_21
  1481     000D  280F               	goto	u6_20
  1482     000E                     u6_21:
  1483     000E  2812               	goto	i1l54
  1484     000F                     u6_20:
  1485     000F                     i1l721:
  1486                           
  1487                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         PIN_MANAGER_IOC();
  1488     000F  3180  203B  3180   	fcall	_PIN_MANAGER_IOC
  1489     0012                     i1l54:	
  1490                           ;mcc_generated_files/system/src/interrupt.c: 65:     }
  1491                           
  1492     0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1493     0013  0009               	retfie
  1494     0014                     __end_of_INTERRUPT_InterruptManager:
  1495                           
  1496                           	psect	text9
  1497     003B                     __ptext9:	
  1498 ;; *************** function _PIN_MANAGER_IOC *****************
  1499 ;; Defined at:
  1500 ;;		line 98 in file "mcc_generated_files/system/src/pins.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1514 ;;      Params:         0       0       0       0
  1515 ;;      Locals:         0       0       0       0
  1516 ;;      Temps:          0       0       0       0
  1517 ;;      Totals:         0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 2
  1521 ;; This function calls:
  1522 ;;		_CHARGING_N_ISR
  1523 ;;		_SWITCH_N_ISR
  1524 ;; This function is called by:
  1525 ;;		_INTERRUPT_InterruptManager
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529     003B                     _PIN_MANAGER_IOC:	
  1530                           ;psect for function _PIN_MANAGER_IOC
  1531                           
  1532     003B                     i1l707:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  1535                           
  1536                           
  1537                           ;mcc_generated_files/system/src/pins.c: 101:     if(IOCAFbits.IOCAF4 == 1)
  1538     003B  017E               	movlb	62	; select bank62
  1539     003C  1E3F               	btfss	63,4	;volatile
  1540     003D  283F               	goto	u3_21
  1541     003E  2840               	goto	u3_20
  1542     003F                     u3_21:
  1543     003F  2843               	goto	i1l711
  1544     0040                     u3_20:
  1545     0040                     i1l709:
  1546                           
  1547                           ;mcc_generated_files/system/src/pins.c: 102:     {;mcc_generated_files/system/src/pins.c
      +                          : 103:         SWITCH_N_ISR();
  1548     0040  3180  204C  3180   	fcall	_SWITCH_N_ISR
  1549     0043                     i1l711:
  1550                           
  1551                           ;mcc_generated_files/system/src/pins.c: 106:     if(IOCAFbits.IOCAF5 == 1)
  1552     0043  017E               	movlb	62	; select bank62
  1553     0044  1EBF               	btfss	63,5	;volatile
  1554     0045  2847               	goto	u4_21
  1555     0046  2848               	goto	u4_20
  1556     0047                     u4_21:
  1557     0047  284B               	goto	i1l115
  1558     0048                     u4_20:
  1559     0048                     i1l713:
  1560                           
  1561                           ;mcc_generated_files/system/src/pins.c: 107:     {;mcc_generated_files/system/src/pins.c
      +                          : 108:         CHARGING_N_ISR();
  1562     0048  3180  205A  3180   	fcall	_CHARGING_N_ISR
  1563     004B                     i1l115:
  1564     004B  0008               	return
  1565     004C                     __end_of_PIN_MANAGER_IOC:
  1566                           
  1567                           	psect	text10
  1568     004C                     __ptext10:	
  1569 ;; *************** function _SWITCH_N_ISR *****************
  1570 ;; Defined at:
  1571 ;;		line 115 in file "mcc_generated_files/system/src/pins.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1585 ;;      Params:         0       0       0       0
  1586 ;;      Locals:         0       0       0       0
  1587 ;;      Temps:          0       0       0       0
  1588 ;;      Totals:         0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 1
  1592 ;; This function calls:
  1593 ;;		NULL
  1594 ;;		_SWITCH_N_DefaultInterruptHandler
  1595 ;; This function is called by:
  1596 ;;		_PIN_MANAGER_IOC
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600     004C                     _SWITCH_N_ISR:	
  1601                           ;psect for function _SWITCH_N_ISR
  1602                           
  1603     004C                     i1l689:	
  1604                           ;incstack = 0
  1605                           ; Regs used in _SWITCH_N_ISR: [wreg+status,2+status,0+pclath+cstack]
  1606                           
  1607                           
  1608                           ;mcc_generated_files/system/src/pins.c: 120:     if(SWITCH_N_InterruptHandler)
  1609     004C  0872               	movf	_SWITCH_N_InterruptHandler,w
  1610     004D  0473               	iorwf	_SWITCH_N_InterruptHandler+1,w
  1611     004E  1903               	btfsc	3,2
  1612     004F  2851               	goto	u1_21
  1613     0050  2852               	goto	u1_20
  1614     0051                     u1_21:
  1615     0051  2857               	goto	i1l693
  1616     0052                     u1_20:
  1617     0052                     i1l691:
  1618                           
  1619                           ;mcc_generated_files/system/src/pins.c: 121:     {;mcc_generated_files/system/src/pins.c
      +                          : 122:         SWITCH_N_InterruptHandler();
  1620     0052  0873               	movf	_SWITCH_N_InterruptHandler+1,w
  1621     0053  008A               	movwf	10
  1622     0054  0872               	movf	_SWITCH_N_InterruptHandler,w
  1623     0055  000A               	callw
  1624     0056  3180               	pagesel	$
  1625     0057                     i1l693:
  1626                           
  1627                           ;mcc_generated_files/system/src/pins.c: 124:     IOCAFbits.IOCAF4 = 0;
  1628     0057  017E               	movlb	62	; select bank62
  1629     0058  123F               	bcf	63,4	;volatile
  1630     0059                     i1l119:
  1631     0059  0008               	return
  1632     005A                     __end_of_SWITCH_N_ISR:
  1633                           
  1634                           	psect	text11
  1635     0096                     __ptext11:	
  1636 ;; *************** function _SWITCH_N_DefaultInterruptHandler *****************
  1637 ;; Defined at:
  1638 ;;		line 137 in file "mcc_generated_files/system/src/pins.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		None
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1652 ;;      Params:         0       0       0       0
  1653 ;;      Locals:         0       0       0       0
  1654 ;;      Temps:          0       0       0       0
  1655 ;;      Totals:         0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_PIN_MANAGER_Initialize
  1662 ;;		_SWITCH_N_ISR
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666     0096                     _SWITCH_N_DefaultInterruptHandler:	
  1667                           ;psect for function _SWITCH_N_DefaultInterruptHandler
  1668                           
  1669     0096                     i1l125:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _SWITCH_N_DefaultInterruptHandler: []
  1672                           
  1673     0096  0008               	return
  1674     0097                     __end_of_SWITCH_N_DefaultInterruptHandler:
  1675                           
  1676                           	psect	text12
  1677     005A                     __ptext12:	
  1678 ;; *************** function _CHARGING_N_ISR *****************
  1679 ;; Defined at:
  1680 ;;		line 145 in file "mcc_generated_files/system/src/pins.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1694 ;;      Params:         0       0       0       0
  1695 ;;      Locals:         0       0       0       0
  1696 ;;      Temps:          0       0       0       0
  1697 ;;      Totals:         0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 1
  1701 ;; This function calls:
  1702 ;;		NULL
  1703 ;;		_CHARGING_N_DefaultInterruptHandler
  1704 ;; This function is called by:
  1705 ;;		_PIN_MANAGER_IOC
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709     005A                     _CHARGING_N_ISR:	
  1710                           ;psect for function _CHARGING_N_ISR
  1711                           
  1712     005A                     i1l695:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _CHARGING_N_ISR: [wreg+status,2+status,0+pclath+cstack]
  1715                           
  1716                           
  1717                           ;mcc_generated_files/system/src/pins.c: 150:     if(CHARGING_N_InterruptHandler)
  1718     005A  0870               	movf	_CHARGING_N_InterruptHandler,w
  1719     005B  0471               	iorwf	_CHARGING_N_InterruptHandler+1,w
  1720     005C  1903               	btfsc	3,2
  1721     005D  285F               	goto	u2_21
  1722     005E  2860               	goto	u2_20
  1723     005F                     u2_21:
  1724     005F  2865               	goto	i1l699
  1725     0060                     u2_20:
  1726     0060                     i1l697:
  1727                           
  1728                           ;mcc_generated_files/system/src/pins.c: 151:     {;mcc_generated_files/system/src/pins.c
      +                          : 152:         CHARGING_N_InterruptHandler();
  1729     0060  0871               	movf	_CHARGING_N_InterruptHandler+1,w
  1730     0061  008A               	movwf	10
  1731     0062  0870               	movf	_CHARGING_N_InterruptHandler,w
  1732     0063  000A               	callw
  1733     0064  3180               	pagesel	$
  1734     0065                     i1l699:
  1735                           
  1736                           ;mcc_generated_files/system/src/pins.c: 154:     IOCAFbits.IOCAF5 = 0;
  1737     0065  017E               	movlb	62	; select bank62
  1738     0066  12BF               	bcf	63,5	;volatile
  1739     0067                     i1l129:
  1740     0067  0008               	return
  1741     0068                     __end_of_CHARGING_N_ISR:
  1742                           
  1743                           	psect	text13
  1744     0097                     __ptext13:	
  1745 ;; *************** function _CHARGING_N_DefaultInterruptHandler *****************
  1746 ;; Defined at:
  1747 ;;		line 167 in file "mcc_generated_files/system/src/pins.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		None
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1761 ;;      Params:         0       0       0       0
  1762 ;;      Locals:         0       0       0       0
  1763 ;;      Temps:          0       0       0       0
  1764 ;;      Totals:         0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_PIN_MANAGER_Initialize
  1771 ;;		_CHARGING_N_ISR
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     0097                     _CHARGING_N_DefaultInterruptHandler:	
  1776                           ;psect for function _CHARGING_N_DefaultInterruptHandler
  1777                           
  1778     0097                     i1l135:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _CHARGING_N_DefaultInterruptHandler: []
  1781                           
  1782     0097  0008               	return
  1783     0098                     __end_of_CHARGING_N_DefaultInterruptHandler:
  1784     0000                     ___latbits      equ	0
  1785     007E                     btemp           set	126	;btemp
  1786     007E                     int$flags       set	126
  1787     007E                     wtemp0          set	126
  1788                           
  1789                           	psect	config
  1790                           
  1791                           ;Config register CONFIG1 @ 0x8007
  1792                           ;	External Oscillator Mode Selection bits
  1793                           ;	FEXTOSC = OFF, Oscillator not enabled
  1794                           ;	Power-up Default Value for COSC bits
  1795                           ;	RSTOSC = LFINTOSC, LFINTOSC
  1796                           ;	Clock Out Enable bit
  1797                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  1798                           ;	VDD Range Analog Calibration Selection bit
  1799                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  1800     8007                     	org	32775
  1801     8007  3FDD               	dw	16349
  1802                           
  1803                           ;Config register CONFIG2 @ 0x8008
  1804                           ;	Master Clear Enable bit
  1805                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1806                           ;	Power-up Timer Selection bits
  1807                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1808                           ;	WDT Operating Mode bits
  1809                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  1810                           ;	Brown-out Reset Enable bits
  1811                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  1812                           ;	Brown-out Reset Voltage Selection bit
  1813                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1814                           ;	PPSLOCKED One-Way Set Enable bit
  1815                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  1816                           ;	Stack Overflow/Underflow Reset Enable bit
  1817                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1818     8008                     	org	32776
  1819     8008  3FE7               	dw	16359
  1820                           
  1821                           ;Config register CONFIG4 @ 0x800A
  1822                           ;	Boot Block Size Selection bits
  1823                           ;	BBSIZE = BB512, 512 words boot block size
  1824                           ;	Boot Block Enable bit
  1825                           ;	BBEN = OFF, Boot Block is disabled
  1826                           ;	SAF Enable bit
  1827                           ;	SAFEN = OFF, SAF is disabled
  1828                           ;	Application Block Write Protection bit
  1829                           ;	WRTAPP = OFF, Application Block is not write-protected
  1830                           ;	Boot Block Write Protection bit
  1831                           ;	WRTB = OFF, Boot Block is not write-protected
  1832                           ;	Configuration Registers Write Protection bit
  1833                           ;	WRTC = OFF, Configuration Registers are not write-protected
  1834                           ;	Storage Area Flash (SAF) Write Protection bit
  1835                           ;	WRTSAF = OFF, SAF is not write-protected
  1836                           ;	Low Voltage Programming Enable bit
  1837                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  1838     800A                     	org	32778
  1839     800A  3FFF               	dw	16383
  1840                           
  1841                           ;Config register CONFIG5 @ 0x800B
  1842                           ;	User Program Flash Memory Code Protection bit
  1843                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  1844     800B                     	org	32779
  1845     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    CHARGING_N_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CHARGING_N_DefaultInterruptHandler(), NULL(), 

    CHARGING_N_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CHARGING_N_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    SWITCH_N_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SWITCH_N_DefaultInterruptHandler(), NULL(), 

    SWITCH_N_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SWITCH_N_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_CHARGING_N_SetInterruptHandler
    _PIN_MANAGER_Initialize->_SWITCH_N_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      69
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      69
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      46
     _CHARGING_N_SetInterruptHandler
       _SWITCH_N_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _SWITCH_N_SetInterruptHandler                         2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CHARGING_N_SetInterruptHandler                       2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                     _CHARGING_N_ISR
                       _SWITCH_N_ISR
 ---------------------------------------------------------------------------------
 (6) _SWITCH_N_ISR                                         0     0      0       0
                                NULL *
   _SWITCH_N_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _SWITCH_N_DefaultInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CHARGING_N_ISR                                       0     0      0       0
                                NULL *
 _CHARGING_N_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _CHARGING_N_DefaultInterruptHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _CHARGING_N_SetInterruptHandler
       _SWITCH_N_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _CHARGING_N_ISR
       NULL(Fake) *
       _CHARGING_N_DefaultInterruptHandler *
     _SWITCH_N_ISR
       NULL(Fake) *
       _SWITCH_N_DefaultInterruptHandler *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BIGRAM             240      0       0      0.0%
COMMON              14      2       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jan 23 21:53:16 2025

                                             l7 0080                                               l8 0080  
                                            l19 0095                                              l28 007C  
                                            l47 0072                                              l64 0090  
                                           l110 003A                                             l122 0086  
                                           l132 008B                                             l731 008C  
                                           l733 0082                                             l741 0022  
                                           l735 0087                                             l751 0038  
                                           l743 0024                                             l753 0068  
                                           l745 0027                                             l737 0018  
                                           l761 0079                                             l667 0091  
                                           l755 006B                                             l747 002A  
                                           l739 0020                                             l763 007D  
                                           l749 0031                                             l757 0073  
                                           l759 0076                                            _LATA 0018  
                                          i1l54 0012                                            _WPUA 1F39  
                                          u1_20 0052                                            u1_21 0051  
                                          u2_20 0060                                            u2_21 005F  
                                          u3_20 0040                                            u3_21 003F  
                                          u4_20 0048                                            u4_21 0047  
                                          u5_20 000B                                            u5_21 000A  
                                          u6_20 000F                                            u6_21 000E  
                                          _main 007D                                            btemp 007E  
                   _INT_DefaultInterruptHandler 0000                                            start 0014  
               __end_of_INT_SetInterruptHandler 0091                                           ?_main 0076  
                                         _IOCAF 1F3F                                           _IOCAN 1F3E  
                                         _IOCAP 1F3D                                           i1l115 004B  
                                         i1l125 0096                                           i1l135 0097  
                                         i1l119 0059                                           i1l129 0067  
                                         i1l711 0043                                           i1l713 0048  
                                         i1l721 000F                                           i1l707 003B  
                                         i1l709 0040                                           i1l717 0006  
                                         i1l719 000B                                           i1l691 0052  
                                         i1l693 0057                                           i1l695 005A  
                                         i1l697 0060                                           i1l689 004C  
                                         i1l699 0065                                           _OSCEN 0891  
                                         _TRISA 0012                         __end_of_PIN_MANAGER_IOC 004C  
                                         pclath 000A                                           status 0003  
                                         wtemp0 007E                                 __initialization 0015  
                                  __end_of_main 0082                     ?_INTERRUPT_InterruptManager 0076  
                                        ??_main 0078                                          _ANSELA 1F38  
                                        _ODCONA 1F3A                                          _INLVLA 1F3C  
                                        _OSCFRQ 0893                               ?_CLOCK_Initialize 0076  
          __end_of_SWITCH_N_SetInterruptHandler 0087                    _SWITCH_N_SetInterruptHandler 0082  
                            ??_CLOCK_Initialize 0076  CHARGING_N_SetInterruptHandler@InterruptHandler 0076  
  SWITCH_N_SetInterruptHandler@InterruptHandler 0076         INT_SetInterruptHandler@InterruptHandler 0076  
                              ?_PIN_MANAGER_IOC 0076          __end_of_CHARGING_N_SetInterruptHandler 008C  
                _CHARGING_N_SetInterruptHandler 0087                               _SYSTEM_Initialize 0073  
                       __end_of__initialization 0015                              ?_SYSTEM_Initialize 0076  
                                __pcstackCOMMON 0076                             ??_SYSTEM_Initialize 0078  
                     _SWITCH_N_InterruptHandler 0072                       __end_of_SYSTEM_Initialize 007D  
                                    __pnvCOMMON 0070                                      __pmaintext 007D  
                                    __pintentry 0004                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B        __end_of_SWITCH_N_DefaultInterruptHandler 0097  
            ??_SWITCH_N_DefaultInterruptHandler 0076               ?_SWITCH_N_DefaultInterruptHandler 0076  
              _SWITCH_N_DefaultInterruptHandler 0096                                         __ptext1 0073  
                                       __ptext2 0018                                         __ptext3 0082  
                                       __ptext4 0087                                         __ptext5 0068  
                                       __ptext6 008C                                         __ptext7 0091  
                                       __ptext9 003B                     _CHARGING_N_InterruptHandler 0070  
                      ??_PIN_MANAGER_Initialize 0078                                       _IOCAFbits 1F3F  
                       _INT_SetInterruptHandler 008C                            end_of_initialization 0015  
                                _CHARGING_N_ISR 005A                                   ?_SWITCH_N_ISR 0076  
                  __end_of_INTERRUPT_Initialize 0073                       ??_INT_SetInterruptHandler 0078  
                           start_initialization 0015                          __end_of_CHARGING_N_ISR 0068  
                                ??_SWITCH_N_ISR 0076                                       ___latbits 0000  
                               ?_CHARGING_N_ISR 0076                          _PIN_MANAGER_Initialize 0018  
                  ??_INTERRUPT_InterruptManager 0076      __end_of_CHARGING_N_DefaultInterruptHandler 0098  
          ??_CHARGING_N_DefaultInterruptHandler 0076             ?_CHARGING_N_DefaultInterruptHandler 0076  
            _CHARGING_N_DefaultInterruptHandler 0097                   ?_SWITCH_N_SetInterruptHandler 0076  
                          _INTERRUPT_Initialize 0068                                _CLOCK_Initialize 0091  
                                      _PIE0bits 0716                                        _PIR0bits 070C  
                             ??_PIN_MANAGER_IOC 0076                            __end_of_SWITCH_N_ISR 005A  
                         ?_INTERRUPT_Initialize 0076                                        __ptext10 004C  
                                      __ptext11 0096                                        __ptext12 005A  
                                      __ptext13 0097                  ??_SWITCH_N_SetInterruptHandler 0078  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0014  
                    _INTERRUPT_InterruptManager 0004                                ??_CHARGING_N_ISR 0076  
                                    _INTCONbits 000B                            _INT_InterruptHandler 0074  
                        ??_INTERRUPT_Initialize 0078                                        intlevel1 0000  
                       ?_PIN_MANAGER_Initialize 0076                        ?_INT_SetInterruptHandler 0076  
              ??_CHARGING_N_SetInterruptHandler 0078                 ?_CHARGING_N_SetInterruptHandler 0076  
                      __end_of_CLOCK_Initialize 0096                  __end_of_PIN_MANAGER_Initialize 003B  
                               _PIN_MANAGER_IOC 003B                                    _SWITCH_N_ISR 004C  
